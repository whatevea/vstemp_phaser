const _0x50048f = _0x3aa9; function _0x408b() { const _0x1029bb = ['remove', 'setVelocityX', 'tilePositionX', 'High\x20Score\x20', 'create', '1028ajkoSX', 'getChildren', 'cityTile', 'min', 'pointer', '21251004ZcdMxm', '20BoXKpN', 'tileSprite', 'GameScene', 'tick', 'subheading', 'forEach', 'restart', '5630680ybSlAw', 'PlayScene', 'buttons', 'playerJumpVelocity', 'image', 'buildingArray', 'textStyles', 'distanceBetweenBuildings', 'setVelocityY', 'GameOver', 'scoreCounter', 'billboard', 'Your\x20Score\x20', 'isJumping', 'input', 'physics', '3587319acMaek', 'building3', 'scene', 'player', 'pushed\x20to\x20back', 'cross', 'gameStarted', '70ueoGqa', 'pointerup', 'destroy', 'displayWidth', 'initialScore', '15598gwdsoW', 'log', 'max', 'onFloor', 'setVelocity', 'Scene', '69880msQbpl', 'setDepth', '7675230Oswvxc', '5kCaRxW', 'score', 'baseSpeed', 'lastElem', 'buildingsVelocity', 'isDown', 'setOrigin', 'brickTile', 'text', 'building2', 'sprite', 'new', '96XfUBMT', 'building1', '8358GCgoqG', 'body', 'buildingDistance', 'add', 'jumpTimer', '13uVHrnH', 'jumpVelocity', 'scale', 'Math', 'Between']; _0x408b = function () { return _0x1029bb; }; return _0x408b(); } (function (_0x4d3228, _0x3b2bc3) { const _0x26cbfb = _0x3aa9, _0x4f1268 = _0x4d3228(); while (!![]) { try { const _0x527019 = parseInt(_0x26cbfb(0xce)) / 0x1 * (parseInt(_0x26cbfb(0xb9)) / 0x2) + parseInt(_0x26cbfb(0xd0)) / 0x3 * (-parseInt(_0x26cbfb(0xdf)) / 0x4) + parseInt(_0x26cbfb(0xc2)) / 0x5 * (-parseInt(_0x26cbfb(0xc1)) / 0x6) + -parseInt(_0x26cbfb(0xb4)) / 0x7 * (parseInt(_0x26cbfb(0xbf)) / 0x8) + parseInt(_0x26cbfb(0xad)) / 0x9 * (parseInt(_0x26cbfb(0x96)) / 0xa) + -parseInt(_0x26cbfb(0x9d)) / 0xb + parseInt(_0x26cbfb(0x95)) / 0xc * (parseInt(_0x26cbfb(0xd5)) / 0xd); if (_0x527019 === _0x3b2bc3) break; else _0x4f1268['push'](_0x4f1268['shift']()); } catch (_0x8edb05) { _0x4f1268['push'](_0x4f1268['shift']()); } } }(_0x408b, 0xb05be)); function _0x3aa9(_0x4bcf4f, _0x1cddf2) { const _0x408bca = _0x408b(); return _0x3aa9 = function (_0x3aa9a3, _0x4482c5) { _0x3aa9a3 = _0x3aa9a3 - 0x92; let _0x27ca40 = _0x408bca[_0x3aa9a3]; return _0x27ca40; }, _0x3aa9(_0x4bcf4f, _0x1cddf2); } import { Building, createBuilding } from './buildings.js'; import _0xbedb0f from './data.js'; import { enableDrag } from './handlers.js'; import { displayScore, updateScore } from './score.js'; import { Toast, Button } from './ui.js'; export default class PlayScene extends Phaser[_0x50048f(0xbe)]{ constructor() { const _0x3fa2f0 = _0x50048f; super({ 'key': _0x3fa2f0(0x9e) }); } [_0x50048f(0xde)]() { const _0x3f5bd7 = _0x50048f; this['score'] = _0xbedb0f[_0x3f5bd7(0xb8)], this[_0x3f5bd7(0xc5)] = undefined, this['isJumping'] = ![], this[_0x3f5bd7(0x94)] = this[_0x3f5bd7(0xab)]['activePointer'], this[_0x3f5bd7(0xd6)] = _0xbedb0f[_0x3f5bd7(0xa0)]; const { width: _0x5be6ee, height: _0x7aee86 } = this[_0x3f5bd7(0xd7)]; this[_0x3f5bd7(0xd2)] = { 'min': _0xbedb0f[_0x3f5bd7(0xa4)][_0x3f5bd7(0x93)], 'max': _0xbedb0f['distanceBetweenBuildings'][_0x3f5bd7(0xbb)] }, this[_0x3f5bd7(0xc4)] = _0xbedb0f[_0x3f5bd7(0xc4)], this['bg'] = this[_0x3f5bd7(0xd3)][_0x3f5bd7(0x97)](0x0, 0x0, _0x5be6ee, _0x7aee86, _0x3f5bd7(0x92))[_0x3f5bd7(0xc8)](0x0, 0x0); const _0x58303a = this[_0x3f5bd7(0xd3)][_0x3f5bd7(0xa1)](0x176, 0x83, 'sun')['setScale'](0.7, 0.8); this[_0x3f5bd7(0xa8)] = this['physics'][_0x3f5bd7(0xd3)]['image'](0x3e8, 0x2e1, _0x3f5bd7(0xa8))['setScale'](0.7)[_0x3f5bd7(0xdb)](this[_0x3f5bd7(0xc4)] * _0xbedb0f[_0x3f5bd7(0xc6)]), this[_0x3f5bd7(0xa8)][_0x3f5bd7(0xd1)]['allowGravity'] = ![], this[_0x3f5bd7(0xb3)] = !![], this[_0x3f5bd7(0xb0)] = this[_0x3f5bd7(0xac)][_0x3f5bd7(0xd3)][_0x3f5bd7(0xcc)](0xc8, 0x2bc, _0x3f5bd7(0xb0))['play']('run'), this[_0x3f5bd7(0xa7)] = displayScore(this), this[_0x3f5bd7(0xab)]['on']('pointerdown', () => { const _0x49406a = _0x3f5bd7; if (!this[_0x49406a(0xaa)] && this[_0x49406a(0xb0)][_0x49406a(0xd1)][_0x49406a(0xbc)]()) { this[_0x49406a(0xaa)] = !![]; let _0x45b6ff = 0x0; this[_0x49406a(0xb0)][_0x49406a(0xd1)]['setVelocityY'](-0x12c), this[_0x49406a(0xd4)] = this['time']['addEvent']({ 'delay': 0x14, 'callback': () => { const _0x526e3a = _0x49406a; this[_0x526e3a(0x94)][_0x526e3a(0xc7)] && _0x45b6ff <= _0xbedb0f['maxJumpTime'] && this['player'][_0x526e3a(0xa5)](-0x12c), _0x45b6ff++; }, 'loop': !![] }); } }, this), this[_0x3f5bd7(0xab)]['on'](_0x3f5bd7(0xb5), () => { const _0x1d2172 = _0x3f5bd7; try { this[_0x1d2172(0xd4)][_0x1d2172(0xda)](); } catch { } this[_0x1d2172(0xaa)] = ![]; }), this[_0x3f5bd7(0xa2)] = this['add']['group'](), createBuilding(this), this[_0x3f5bd7(0xc9)] = this['add'][_0x3f5bd7(0x97)](0x0, 0x3e4, _0x5be6ee, _0x7aee86 / 0x4, 'brickTile')[_0x3f5bd7(0xc8)](0x0, 0x0)[_0x3f5bd7(0xc0)](0x2); } ['update'](_0x2d74d8, _0x4d764f) { const _0x53aeb8 = _0x50048f; !this[_0x53aeb8(0xb3)] && (this[_0x53aeb8(0xa2)][_0x53aeb8(0xe0)]()[_0x53aeb8(0x9b)](_0x26cc93 => _0x26cc93[_0x53aeb8(0xbd)](0x0)), this[_0x53aeb8(0xa7)]['remove']()); this['gameStarted'] && (this[_0x53aeb8(0xa8)]['x'] < -_0xbedb0f['billboardApperanceFrequency'] && (this['billboard']['x'] = Phaser[_0x53aeb8(0xd8)][_0x53aeb8(0xd9)](0x3e8, 0xbb8), console[_0x53aeb8(0xba)](_0x53aeb8(0xb1))), this['bg']['tilePositionX'] += 0x1 * this['baseSpeed'], this[_0x53aeb8(0xc9)][_0x53aeb8(0xdc)] += 0x4 * this[_0x53aeb8(0xc4)]); this[_0x53aeb8(0xa2)][_0x53aeb8(0xe0)]()[_0x53aeb8(0x9b)](_0x2f32db => { const _0x94b594 = _0x53aeb8; if (_0x2f32db['x'] < -_0x2f32db[_0x94b594(0xb7)]) { _0x2f32db[_0x94b594(0xb6)](), this['buildingArray'][_0x94b594(0xda)](_0x2f32db); let _0x225fd5 = this[_0x94b594(0xc5)]['x'] + this[_0x94b594(0xc5)]['displayWidth'] + Phaser[_0x94b594(0xd8)][_0x94b594(0xd9)](this[_0x94b594(0xd2)]['min'], this['buildingDistance'][_0x94b594(0xbb)]); new Building(this, _0x225fd5, [_0x94b594(0xcf), _0x94b594(0xcb), _0x94b594(0xae)][Phaser[_0x94b594(0xd8)][_0x94b594(0xd9)](0x0, 0x2)]); } }); if (this[_0x53aeb8(0xb0)]['y'] > 0x44c && this[_0x53aeb8(0xb3)]) { this[_0x53aeb8(0xb3)] = ![]; const _0x3db66e = updateScore(this[_0x53aeb8(0xc3)]), _0x3b20f2 = new Toast(this, 0x1c2, 0x12c), _0x42d699 = this[_0x53aeb8(0xd3)][_0x53aeb8(0xca)](0x66, 0x4, _0x53aeb8(0xa6), _0xbedb0f[_0x53aeb8(0xa3)]['heading']), _0x1ec46d = this[_0x53aeb8(0xd3)][_0x53aeb8(0xca)](0x6e, 0x61, _0x53aeb8(0xa9) + _0x3db66e[_0x53aeb8(0xcd)], _0xbedb0f[_0x53aeb8(0xa3)][_0x53aeb8(0x9a)]), _0x1b1587 = this['add'][_0x53aeb8(0xca)](0x71, 0x8f, _0x53aeb8(0xdd) + _0x3db66e['high'], _0xbedb0f[_0x53aeb8(0xa3)][_0x53aeb8(0x9a)]), _0x32206c = new Button(this, 0x41, 0xf2, _0xbedb0f['buttons'][_0x53aeb8(0xb2)]), _0x510a87 = new Button(this, 0x156, 0xee, _0xbedb0f[_0x53aeb8(0x9f)][_0x53aeb8(0x99)]); _0x3b20f2[_0x53aeb8(0xd3)]([_0x42d699, _0x1ec46d, _0x1b1587, _0x510a87, _0x32206c]), _0x3b20f2['show'](), _0x32206c['on']('pointerup', () => { const _0x28eff8 = _0x53aeb8; this[_0x28eff8(0xaf)]['start'](_0x28eff8(0x98)); }), _0x510a87['on']('pointerup', () => { const _0x2d98a9 = _0x53aeb8; this[_0x2d98a9(0xaf)][_0x2d98a9(0x9c)](); }); } } }